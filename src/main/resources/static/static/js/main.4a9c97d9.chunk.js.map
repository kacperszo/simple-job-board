{"version":3,"sources":["components/Navbar/Navbar.js","components/Navbar/index.js","api/requests.js","components/AdvertisementsList/AdvertisementItem/AdvertisementItem.js","components/AdvertisementsList/AdvertisementItem/index.js","components/RoundButton/index.js","components/RoundButton/RoundButton.js","components/AdvertisementsList/AdvertisementsList.js","components/AdvertisementsList/index.js","store/actions/userActions.js","pages/Home/index.js","pages/Home/Home.js","components/AdvertismentView/AdvertisementView.js","components/AdvertismentView/index.js","pages/Advertisement/index.js","pages/Advertisement/Advertisement.js","components/LoginForm/index.js","components/LoginForm/LoginForm.js","pages/Login/Login.js","pages/Login/index.js","components/AdvertisementEditor/index.js","components/AdvertisementEditor/AdvertisementEditor.js","pages/NewAdvertisement/NewAdvertisement.js","pages/NewAdvertisement/index.js","pages/EditAdvertisement/index.js","pages/EditAdvertisement/EditAdvertisement.js","components/App/App.js","serviceWorker.js","store/reducers/index.js","store/reducers/userReducer.js","index.js","store/configureStore.js","components/AdvertisementsList/AdvertisementItem/advertisementItem.module.scss","components/RoundButton/roundButton.module.scss","components/AdvertismentView/advertisementView.module.scss"],"names":["Navbar","props","className","role","aria-label","to","title","url","window","location","origin","checkForError","response","ok","Error","statusText","json","findAdvertisementById","id","token","fetch","method","headers","then","updateAdvertisement","advertisement","body","JSON","stringify","content","expirationDate","hidden","AdvertisementItem","style","length","substring","expirationTime","Date","today","timeToExpiration","getTime","Math","floor","getTimeToExpirationInDays","isLoggedIn","onClick","handleToggleVisibility","handleDelete","renderAdminBlock","RoundButton","href","styles","roundButton","AdvertisementsList","useState","advertisements","setAdvertisements","useHistory","useEffect","advertisment","filter","currentAdvertisement","map","key","propeTypes","PropTypes","arrayOf","shape","number","isRequired","string","creationDate","bool","userActionsType","connect","state","user","dispatch","addToken","type","removeToken","data","AdvertisementView","split","line","index","setAdvertisement","useParams","history","catch","err","push","LoginForm","username","setUsername","password","setPassword","action","htmlFor","onChange","event","target","value","placeholder","required","e","preventDefault","onSubmit","error","Login","setError","console","log","getUserToken","result","AdvertisementEditor","setTitle","setContent","setExpirationDate","setHidden","checked","NewAdvertisement","r","App","excat","path","Boolean","hostname","match","rootReducer","combineReducers","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.4a9c97d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={`navbar`} role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className={`navbar-brand`}>\r\n                    <Link to={`/`} className={`navbar-item`}>{props.title}</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n};\r\nexport default Navbar;","import Navbar from \"./Navbar\";\r\n\r\nexport default Navbar","export const url = `${window.location.origin}/api/v1`\r\n\r\nconst checkForError = response => {\r\n    if (!response.ok) throw Error(response.statusText)\r\n    return response.json()\r\n}\r\n\r\nexport const findAllAdvertisements = token => {\r\n    if (token) {\r\n        return fetch(`${url}/advertisements`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(checkForError)\r\n    }\r\n    return fetch(`${url}/advertisements`).then(checkForError)\r\n}\r\n\r\nexport const findAdvertisementById = (id, token) => {\r\n    if (token) {\r\n        return fetch(`${url}/advertisements/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(checkForError)\r\n    }\r\n    return fetch(`${url}/advertisements/${id}`).then(checkForError)\r\n}\r\n\r\nexport const updateAdvertisement = (advertisement, token) => {\r\n    return fetch(`${url}/advertisements/${advertisement.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"title\": advertisement.title,\r\n            \"content\": advertisement.content,\r\n            \"expirationDate\": advertisement.expirationDate,\r\n            \"hidden\": advertisement.hidden\r\n        })\r\n    }).then(checkForError);\r\n}\r\nexport const createAdvertisement = (advertisement, token) => {\r\n    return fetch(`${url}/advertisements`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"title\": advertisement.title,\r\n            \"content\": advertisement.content,\r\n            \"expirationDate\": advertisement.expirationDate,\r\n            \"hidden\": advertisement.hidden\r\n        })\r\n    }).then(checkForError);\r\n}\r\n\r\nexport const removeAdvertisement = (id, token) => {\r\n    return fetch(`${url}/advertisements/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    }).then(response => response);\r\n}\r\n\r\nexport const getUserToken = (username, password) => {\r\n    return fetch(`${url}/auth`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username,\r\n            password\r\n        })\r\n    }).then(checkForError);\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport style from \"./advertisementItem.module.scss\"\r\n\r\nfunction millisecondsToDays(milliseconds) {\r\n    return milliseconds / 1000 / 60 / 60 / 24;\r\n}\r\n\r\nconst AdvertisementItem = (props) => {\r\n    function renderAdminBlock() {\r\n\r\n        if (props.isLoggedIn) {\r\n            return (\r\n                <>\r\n                    <button onClick={() => props.handleToggleVisibility(props.advertisement)}\r\n                            className={props.advertisement.hidden ? `button is-dark` : `button is-light`}>{\r\n                        props.advertisement.hidden ? `show` : `hide`\r\n                    }</button>\r\n                    <button className={`button is-warning`}\r\n                            onClick={() => props.handleDelete(props.advertisement)}>remove\r\n                    </button>\r\n                    <Link to={`advertisements/${props.advertisement.id}/edit`}>\r\n                        <button className={`button is-info`}>edit\r\n                        </button>\r\n                    </Link>\r\n\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getTimeToExpirationInDays = (expirationTime) => {\r\n        expirationTime = new Date(expirationTime);\r\n        const today = new Date();\r\n        const timeToExpiration = expirationTime.getTime() - today.getTime();\r\n        return Math.floor(millisecondsToDays(timeToExpiration));\r\n    }\r\n\r\n    return (\r\n        <div className={`card ${style.advertisement}`}>\r\n            <div className={`card-content`}>\r\n                <div className={`media-content`}>\r\n                    <p className={`title`}>{props.advertisement.title}</p>\r\n                </div>\r\n\r\n                <div className={`content`}>\r\n                    <p>\r\n                        {\r\n                            props.advertisement.content.length < 150 ? props.advertisement.content : props.advertisement.content.substring(0, 150) + \"...\"\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <p className=\"subtitle is-6\">\r\n                    {\r\n\r\n                        `Expire in ${getTimeToExpirationInDays(props.advertisement.expirationDate)} days`\r\n                    }\r\n                </p>\r\n                <div className={`buttons`}>\r\n                    <Link className={`button is-primary`} to={`advertisements/${props.advertisement.id}`}>Read\r\n                        more\r\n                    </Link>\r\n                    {renderAdminBlock()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAdvertisementItem.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    advertisement: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    }).isRequired,\r\n    handleToggleVisibility: PropTypes.func,\r\n    handleDelete: PropTypes.func,\r\n\r\n}\r\nexport default AdvertisementItem;","import AdvertisementItem from \"./AdvertisementItem\";\r\n\r\nexport default AdvertisementItem","import RoundButton from \"./RoundButton\";\r\n\r\nexport default RoundButton","import React from \"react\";\r\nimport styles from \"./roundButton.module.scss\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function RoundButton(props) {\r\n    return (\r\n        <Link to={props.href}>\r\n            <div className={styles.roundButton}><p>{props.content}</p></div>\r\n        </Link>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport AdvertisementItem from \"./AdvertisementItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {updateAdvertisement, removeAdvertisement} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport RoundButton from \"../RoundButton\";\r\n\r\nfunction AdvertisementsList(props) {\r\n    const [advertisements, setAdvertisements] = useState(props.advertisements)\r\n    const history = useHistory()\r\n    useEffect(() => (setAdvertisements(props.advertisements)), [props.advertisements])\r\n\r\n    const handleDelete = (advertisment) => {\r\n        removeAdvertisement(advertisment.id, props.token).then(() =>\r\n            setAdvertisements(advertisements.filter(currentAdvertisement => currentAdvertisement.id !== advertisment.id)))\r\n    }\r\n    const handleToggleVisibility = (advertisement) => {\r\n        updateAdvertisement({...advertisement, hidden: !advertisement.hidden}, props.token).then(() => {\r\n            setAdvertisements(advertisements.map(currentAdvertisement => {\r\n                if (currentAdvertisement.id === advertisement.id) {\r\n                    currentAdvertisement.hidden = !currentAdvertisement.hidden\r\n                }\r\n                return currentAdvertisement\r\n            }))\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                advertisements.map((advertisement) => <AdvertisementItem\r\n                    key={advertisement.id}\r\n                    advertisement={advertisement}\r\n                    isLoggedIn={!!props.token}\r\n                    handleDelete={handleDelete}\r\n                    handleToggleVisibility={handleToggleVisibility}\r\n                />)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nAdvertisementsList.propeTypes = {\r\n    advertisements: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    })).isRequired,\r\n    token: PropTypes.string\r\n}\r\nexport default AdvertisementsList","import AdvertisementsList from \"./AdvertisementsList\";\r\n\r\nexport default AdvertisementsList","export const userActionsType = {\r\n    ADD_TOKEN: \"ADD_TOKEN\",\r\n    REMOVE_TOKEN: \"REMOVE_TOKEN\"\r\n}\r\n\r\nexport function addToken(token) {\r\n    return {\r\n        type: userActionsType.ADD_TOKEN,\r\n        token\r\n    }\r\n}\r\n\r\nexport function removeToken() {\r\n    return {\r\n        type: userActionsType.REMOVE_TOKEN\r\n    }\r\n}","import Home from \"./Home\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, {useEffect, useState} from \"react\";\r\nimport {findAllAdvertisements} from \"../../api\";\r\nimport AdvertisementsList from \"../../components/AdvertisementsList\";\r\nimport RoundButton from \"../../components/RoundButton\";\r\n\r\nexport default function Home(props) {\r\n    const [advertisements, setAdvertisements] = useState([])\r\n    useEffect(() => {\r\n        findAllAdvertisements(props.user.token).then(data => setAdvertisements(data.content));\r\n    }, [])\r\n    return (\r\n        <>\r\n            <AdvertisementsList advertisements={advertisements} token={props.user.token}/>\r\n            {\r\n                props.user.token ? <RoundButton content={\"+\"} href={\"/advertisements/new\"}/> : null\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./advertisementView.module.scss\"\r\nimport PropTypes from \"prop-types\";\r\nimport AdvertisementsList from \"../AdvertisementsList\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst AdvertisementView = (props) => {\r\n    return (\r\n        <div className={`container`}>\r\n            <div className={`card ${style.advertisement}`}>\r\n                <div className={`card-content`}>\r\n                    <div className={`media-content`}>\r\n                        <p className={`title is-4`}>{props.advertisement.title}</p>\r\n                    </div>\r\n                    <div className={`content`}>\r\n                        <p>\r\n                            {props.advertisement.content.split(`\\n`).map((line, index) => {\r\n                                return (\r\n                                    <span key={index}>\r\n                                        {line}<br/>\r\n                                    </span>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"subtitle is-6\">\r\n                        {`Expiration date ${props.advertisement.expirationDate.substring(0, 10)}`}\r\n                    </p>\r\n                    <div className={`buttons`}>\r\n                        <a className={`button is-primary`} href={`mailto:hr@TestCompany.test`}>Apply\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAdvertisementsList.propeTypes = {\r\n    advertisement: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    }).isRequired\r\n}\r\nexport default AdvertisementView","import AdvertisementView from \"./AdvertisementView\";\r\n\r\nexport default AdvertisementView","import Advertisement from \"./Advertisement\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Advertisement);","import React, {useEffect, useState} from \"react\";\r\nimport {findAdvertisementById} from \"../../api\";\r\nimport AdvertisementView from \"../../components/AdvertismentView\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function Advertisement(props) {\r\n    const [advertisement, setAdvertisement] = useState({\r\n        id: null, title: \"\", content: \"\", creationDate: \"\", expirationDate: \"\", hidden: null\r\n    })\r\n    const {id} = useParams()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        findAdvertisementById(id, props.user.token).then(data => {\r\n            setAdvertisement(data)\r\n        }).catch(err => history.push(\"/\"));\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AdvertisementView advertisement={advertisement}/>\r\n        </>\r\n    )\r\n}","import LoginForm from \"./LoginForm\";\r\n\r\nexport default LoginForm","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    return (\r\n        <div>\r\n            <form action=\"\" className=\"box\">\r\n                <h2 className={\"title has-text-centered\"}>Login</h2>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"\" className=\"label\">Username</label>\r\n                    <div className=\"control\">\r\n                        <input onChange={(event) => setUsername(event.target.value)} value={username}\r\n                               type=\"text\" placeholder=\"e.g. johnDoo12\"\r\n                               className=\"input\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"\" className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input onChange={(event) => setPassword(event.target.value)} value={password}\r\n                               type=\"password\" placeholder=\"*********\"\r\n                               className=\"input\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field has-text-centered\">\r\n                    <button onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.onSubmit(username, password)\r\n                    }} type=\"submit\" className=\"button is-primary\">\r\n                        Login\r\n                    </button>\r\n                </div>\r\n                {props.error ? (<div className=\"notification is-danger has-text-centered\">\r\n                    {props.error}\r\n                </div>) : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nLoginForm.propTypes = {\r\n    error: PropTypes.string,\r\n    onSubmit: PropTypes.func\r\n}\r\nexport default LoginForm","import React, {useState} from \"react\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\nimport {getUserToken} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const [error, setError] = useState()\r\n    const login = (username, password) => {\r\n        console.log(username, password)\r\n        getUserToken(username, password).then(result => {\r\n                props.addToken(result.token)\r\n                setError(null)\r\n                history.push(\"/\")\r\n            }\r\n        ).catch(() => setError(\"invalid username or password\"))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`container`}>\r\n            <div className={`columns is-centered`}>\r\n                <div className={`column is-5-tablet is-4-desktop is-3-widescreen`}>\r\n                    <LoginForm error={error} onSubmit={login}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login","import Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import AdvertisementEditor from \"./AdvertisementEditor\";\r\n\r\nexport default AdvertisementEditor;","import React, {useEffect, useState} from \"react\";\r\n\r\nexport default function AdvertisementEditor(props) {\r\n    const [title, setTitle] = useState(props.title)\r\n    const [content, setContent] = useState(props.content)\r\n    const [expirationDate, setExpirationDate] = useState(props.expirationDate)\r\n    const [hidden, setHidden] = useState(props.hidden)\r\n    useEffect(() => {\r\n        setTitle(props.title)\r\n        setContent(props.content)\r\n        setExpirationDate(props.expirationDate)\r\n        setHidden(props.hidden)\r\n    }, [props.id])\r\n    return (\r\n        <form>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Title</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input className=\"input\" onChange={(e) => setTitle(e.target.value)} value={title}\r\n                                   type=\"text\" placeholder=\"Title\"/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Content</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <textarea className=\"textarea\" onChange={(e) => setContent(e.target.value)} value={content}\r\n                                      placeholder=\"Your job advertisment\"></textarea>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Expiration date</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input type=\"datetime-local\"\r\n                                   className=\"input\"\r\n                                   value={expirationDate}\r\n                                   onChange={e => setExpirationDate(e.target.value)}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Hidden</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"checkbox\"\r\n                                   onChange={e => setHidden(e.target.checked)}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <button type=\"submit\" onClick={e => {\r\n                                e.preventDefault();\r\n                                props.onSubmit(title, content, expirationDate, hidden)\r\n                            }} className=\"button is-primary\">\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport AdvertisementEditor from \"../../components/AdvertisementEditor\";\r\nimport {createAdvertisement} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst NewAdvertisement = (props) => {\r\n    const history = useHistory()\r\n    const handleSubmit = (title, content, expirationDate, hidden) => {\r\n        createAdvertisement({\r\n                title,\r\n                content,\r\n                expirationDate,\r\n                hidden\r\n            }, props.user.token\r\n        ).then(r=> history.push(`/advertisements/${r.id}`))\r\n    };\r\n    return (\r\n        <div className={`container`}>\r\n            <AdvertisementEditor onSubmit={handleSubmit} title={\"\"} content={\"\"} expirationDate={\"\"} hidden={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewAdvertisement","import {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport NewAdvertisement from \"./NewAdvertisement\"\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewAdvertisement)","import {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport EditAdvertisement from \"./EditAdvertisement\"\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertisement)","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {findAdvertisementById, updateAdvertisement} from \"../../api\";\r\nimport AdvertisementEditor from \"../../components/AdvertisementEditor\";\r\n\r\nexport default function EditAdvertisement(props) {\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [advertisement, setAdvertisement] = useState({\r\n        id: null, title: \"\", content: \"\", creationDate: \"\", expirationDate: \"\", hidden: null\r\n    })\r\n    useEffect(() => {\r\n        findAdvertisementById(id, props.user.token).then(data => {\r\n            setAdvertisement(data)\r\n        }).catch(err => history.push(`/advertisements/`));\r\n    }, [])\r\n    const handleSubmit = (title, content, expirationDate, hidden) => {\r\n        updateAdvertisement({\r\n            id, title, content, expirationDate, hidden\r\n        }, props.user.token).then(r=> history.push(`/advertisements/${r.id}`))\r\n    }\r\n    return (\r\n        <div className={\"container\"}>\r\n            <AdvertisementEditor id={advertisement.id}\r\n                                 title={advertisement.title}\r\n                                 content={advertisement.content}\r\n                                 expirationDate={advertisement.expirationDate}\r\n                                 hidden={advertisement.hidden}\r\n                                 onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"../../pages/Home\";\r\nimport Advertisement from \"../../pages/Advertisement\";\r\nimport Login from \"../../pages/Login\";\r\nimport NewAdvertisement from \"../../pages/NewAdvertisement\";\r\nimport EditAdvertisement from \"../../pages/EditAdvertisement\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navbar title={\"Simple-Job-Board\"}/>\r\n                <Switch>\r\n                    <Route excat path={\"/advertisements/new\"}>\r\n                        <NewAdvertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/advertisements/:id/edit\"}>\r\n                        <EditAdvertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/advertisements/:id\"}>\r\n                        <Advertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/login\"}>\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route excat path={\"/\"}>\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport user from \"./userReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user\r\n});\r\n\r\nexport default rootReducer","import {userActionsType} from \"../actions/userActions\";\r\n\r\nexport default function (state = \"\", action) {\r\n    switch (action.type) {\r\n        case userActionsType.ADD_TOKEN:\r\n            return {\r\n                token: action.token\r\n            };\r\n        case userActionsType.REMOVE_TOKEN: {\r\n            return {\r\n                token: null\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./store/configureStore\";\nimport {Provider} from \"react-redux\";\n\nconst store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nexport default function configureStore(initialState) {\r\n    const composeEnhancers =\r\n        (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advertisement\":\"advertisementItem_advertisement__3uHEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundButton\":\"roundButton_roundButton__XdrwM\",\"spinAround\":\"roundButton_spinAround__W-YdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advertisement\":\"advertisementView_advertisement__3IWjw\"};"],"sourceRoot":""}