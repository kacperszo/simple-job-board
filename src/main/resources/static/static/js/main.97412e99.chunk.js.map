{"version":3,"sources":["components/Navbar/Navbar.js","components/Navbar/index.js","api/requests.js","config/config.js","config/local.js","components/AdvertisementsList/AdvertisementItem/AdvertisementItem.js","components/AdvertisementsList/AdvertisementItem/index.js","components/RoundButton/index.js","components/RoundButton/RoundButton.js","components/AdvertisementsList/AdvertisementsList.js","components/AdvertisementsList/index.js","store/actions/userActions.js","pages/Home/index.js","pages/Home/Home.js","components/AdvertismentView/AdvertisementView.js","components/AdvertismentView/index.js","pages/Advertisement/index.js","pages/Advertisement/Advertisement.js","components/LoginForm/index.js","components/LoginForm/LoginForm.js","pages/Login/Login.js","pages/Login/index.js","components/AdvertisementEditor/index.js","components/AdvertisementEditor/AdvertisementEditor.js","pages/NewAdvertisement/NewAdvertisement.js","pages/NewAdvertisement/index.js","pages/EditAdvertisement/index.js","pages/EditAdvertisement/EditAdvertisement.js","components/App/App.js","serviceWorker.js","store/reducers/index.js","store/reducers/userReducer.js","index.js","store/configureStore.js","components/AdvertisementsList/AdvertisementItem/advertisementItem.module.scss","components/RoundButton/roundButton.module.scss","components/AdvertismentView/advertisementView.module.scss"],"names":["Navbar","props","className","role","aria-label","to","title","url","checkForError","response","ok","Error","statusText","json","findAdvertisementById","id","token","fetch","method","headers","then","updateAdvertisement","advertisement","body","JSON","stringify","content","expirationDate","hidden","local","expireIn","days","readMore","show","hide","remove","edit","apply","save","username","password","login","invalidUsernameOrPassword","getLocal","lang","navigator","language","AdvertisementItem","style","length","substring","expirationTime","Date","today","timeToExpiration","getTime","Math","floor","getTimeToExpirationInDays","isLoggedIn","onClick","handleToggleVisibility","handleDelete","renderAdminBlock","RoundButton","href","styles","roundButton","AdvertisementsList","useState","advertisements","setAdvertisements","useHistory","useEffect","advertisment","filter","currentAdvertisement","map","key","propeTypes","PropTypes","arrayOf","shape","number","isRequired","string","creationDate","bool","userActionsType","connect","state","user","dispatch","addToken","type","removeToken","data","AdvertisementView","split","line","index","setAdvertisement","useParams","history","catch","err","push","LoginForm","setUsername","setPassword","action","htmlFor","onChange","event","target","value","placeholder","required","e","preventDefault","onSubmit","error","Login","setError","getUserToken","result","AdvertisementEditor","setTitle","setContent","setExpirationDate","setHidden","checked","NewAdvertisement","r","App","excat","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.97412e99.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={`navbar`} role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className={`navbar-brand`}>\r\n                    <Link to={`/`} className={`navbar-item`}>{props.title}</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n};\r\nexport default Navbar;","import Navbar from \"./Navbar\";\r\n\r\nexport default Navbar","import {api_url} from \"../config/config\";\r\n\r\nconst url = api_url\r\n\r\nconst checkForError = response => {\r\n    if (!response.ok) throw Error(response.statusText)\r\n    return response.json()\r\n}\r\n\r\nexport const findAllAdvertisements = token => {\r\n    if (token) {\r\n        return fetch(`${url}/advertisements`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(checkForError)\r\n    }\r\n    return fetch(`${url}/advertisements`).then(checkForError)\r\n}\r\n\r\nexport const findAdvertisementById = (id, token) => {\r\n    if (token) {\r\n        return fetch(`${url}/advertisements/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(checkForError)\r\n    }\r\n    return fetch(`${url}/advertisements/${id}`).then(checkForError)\r\n}\r\n\r\nexport const updateAdvertisement = (advertisement, token) => {\r\n    return fetch(`${url}/advertisements/${advertisement.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"title\": advertisement.title,\r\n            \"content\": advertisement.content,\r\n            \"expirationDate\": advertisement.expirationDate,\r\n            \"hidden\": advertisement.hidden\r\n        })\r\n    }).then(checkForError);\r\n}\r\nexport const createAdvertisement = (advertisement, token) => {\r\n    return fetch(`${url}/advertisements`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"title\": advertisement.title,\r\n            \"content\": advertisement.content,\r\n            \"expirationDate\": advertisement.expirationDate,\r\n            \"hidden\": advertisement.hidden\r\n        })\r\n    }).then(checkForError);\r\n}\r\n\r\nexport const removeAdvertisement = (id, token) => {\r\n    return fetch(`${url}/advertisements/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    }).then(response => response);\r\n}\r\n\r\nexport const getUserToken = (username, password) => {\r\n    return fetch(`${url}/auth`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username,\r\n            password\r\n        })\r\n    }).then(checkForError);\r\n}","export const api_url = \"http://localhost:8080/api/v1\"\r\nexport const title = \"Simple-Job-Board\"\r\nexport const default_lang = \"en-US\"","import {default_lang} from \"./config\";\r\n\r\nexport const local = {\r\n    \"en-US\": {\r\n        expireIn: \"Expire in\",\r\n        days: \"days\",\r\n        readMore: \"Read more\",\r\n        show: \"Show\",\r\n        hide: \"Hide\",\r\n        remove: \"Remove\",\r\n        edit: \"Edit\",\r\n        expirationDate: \"Expiration date\",\r\n        apply: \"Apply\",\r\n        title: \"Title\",\r\n        content: \"Content\",\r\n        hidden: \"Hidden\",\r\n        save: \"Save\",\r\n        username: \"username\",\r\n        password: \"password\",\r\n        login: \"login\",\r\n        invalidUsernameOrPassword: \"Invalid username or password\"\r\n    },\r\n    \"pl\": {\r\n        expireIn: \"Wygaśnie za\",\r\n        days: \"dni\",\r\n        readMore: \"Czytaj więcej\",\r\n        show: \"Pokaż\",\r\n        hide: \"Ukryj\",\r\n        remove: \"Usuń\",\r\n        edit: \"Edytuj\",\r\n        expirationDate: \"Data wygaśnięcia\",\r\n        apply: \"Aplikuj\",\r\n        title: \"Tytuł\",\r\n        content: \"Opis\",\r\n        hidden: \"Ukryte\",\r\n        save: \"Zapisz\",\r\n        username: \"Nazwa użytkownika\",\r\n        password: \"Hasło\",\r\n        login: \"zaloguj\",\r\n        invalidUsernameOrPassword: \"Błędny login lub hasło\"\r\n    }\r\n}\r\n\r\nexport function getLocal() {\r\n    const lang = navigator.language;\r\n    if (lang in local) {\r\n        return local[lang]\r\n    } else {\r\n        return local[default_lang]\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport style from \"./advertisementItem.module.scss\"\r\nimport {getLocal} from \"../../../config/local\";\r\n\r\nfunction millisecondsToDays(milliseconds) {\r\n    return milliseconds / 1000 / 60 / 60 / 24;\r\n}\r\n\r\nconst AdvertisementItem = (props) => {\r\n    const local = getLocal();\r\n    function renderAdminBlock() {\r\n\r\n        if (props.isLoggedIn) {\r\n            return (\r\n                <>\r\n                    <button onClick={() => props.handleToggleVisibility(props.advertisement)}\r\n                            className={props.advertisement.hidden ? `button is-dark` : `button is-light`}>{\r\n                        props.advertisement.hidden ? local.show : local.hide\r\n                    }</button>\r\n                    <button className={`button is-warning`}\r\n                            onClick={() => props.handleDelete(props.advertisement)}>{\r\n                        local.remove\r\n                    }\r\n                    </button>\r\n                    <Link to={`advertisements/${props.advertisement.id}/edit`}>\r\n                        <button className={`button is-info`}>\r\n                            {\r\n                                local.edit\r\n                            }\r\n                        </button>\r\n                    </Link>\r\n\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getTimeToExpirationInDays = (expirationTime) => {\r\n        expirationTime = new Date(expirationTime);\r\n        const today = new Date();\r\n        const timeToExpiration = expirationTime.getTime() - today.getTime();\r\n        return Math.floor(millisecondsToDays(timeToExpiration));\r\n    }\r\n\r\n    return (\r\n        <div className={`card ${style.advertisement}`}>\r\n            <div className={`card-content`}>\r\n                <div className={`media-content`}>\r\n                    <p className={`title`}>{props.advertisement.title}</p>\r\n                </div>\r\n\r\n                <div className={`content`}>\r\n                    <p>\r\n                        {\r\n                            props.advertisement.content.length < 150 ? props.advertisement.content : props.advertisement.content.substring(0, 150) + \"...\"\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <p className=\"subtitle is-6\">\r\n                    {\r\n\r\n                        `${local.expireIn} ${getTimeToExpirationInDays(props.advertisement.expirationDate)} ${local.days}`\r\n                    }\r\n                </p>\r\n                <div className={`buttons`}>\r\n                    <Link className={`button is-primary`} to={`advertisements/${props.advertisement.id}`}>{\r\n                        local.readMore\r\n                    }\r\n                    </Link>\r\n                    {renderAdminBlock()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAdvertisementItem.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    advertisement: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    }).isRequired,\r\n    handleToggleVisibility: PropTypes.func,\r\n    handleDelete: PropTypes.func,\r\n\r\n}\r\nexport default AdvertisementItem;","import AdvertisementItem from \"./AdvertisementItem\";\r\n\r\nexport default AdvertisementItem","import RoundButton from \"./RoundButton\";\r\n\r\nexport default RoundButton","import React from \"react\";\r\nimport styles from \"./roundButton.module.scss\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function RoundButton(props) {\r\n    return (\r\n        <Link to={props.href}>\r\n            <div className={styles.roundButton}><p>{props.content}</p></div>\r\n        </Link>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport AdvertisementItem from \"./AdvertisementItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {updateAdvertisement, removeAdvertisement} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport RoundButton from \"../RoundButton\";\r\n\r\nfunction AdvertisementsList(props) {\r\n    const [advertisements, setAdvertisements] = useState(props.advertisements)\r\n    const history = useHistory()\r\n    useEffect(() => (setAdvertisements(props.advertisements)), [props.advertisements])\r\n\r\n    const handleDelete = (advertisment) => {\r\n        removeAdvertisement(advertisment.id, props.token).then(() =>\r\n            setAdvertisements(advertisements.filter(currentAdvertisement => currentAdvertisement.id !== advertisment.id)))\r\n    }\r\n    const handleToggleVisibility = (advertisement) => {\r\n        updateAdvertisement({...advertisement, hidden: !advertisement.hidden}, props.token).then(() => {\r\n            setAdvertisements(advertisements.map(currentAdvertisement => {\r\n                if (currentAdvertisement.id === advertisement.id) {\r\n                    currentAdvertisement.hidden = !currentAdvertisement.hidden\r\n                }\r\n                return currentAdvertisement\r\n            }))\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                advertisements.map((advertisement) => <AdvertisementItem\r\n                    key={advertisement.id}\r\n                    advertisement={advertisement}\r\n                    isLoggedIn={!!props.token}\r\n                    handleDelete={handleDelete}\r\n                    handleToggleVisibility={handleToggleVisibility}\r\n                />)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nAdvertisementsList.propeTypes = {\r\n    advertisements: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    })).isRequired,\r\n    token: PropTypes.string\r\n}\r\nexport default AdvertisementsList","import AdvertisementsList from \"./AdvertisementsList\";\r\n\r\nexport default AdvertisementsList","export const userActionsType = {\r\n    ADD_TOKEN: \"ADD_TOKEN\",\r\n    REMOVE_TOKEN: \"REMOVE_TOKEN\"\r\n}\r\n\r\nexport function addToken(token) {\r\n    return {\r\n        type: userActionsType.ADD_TOKEN,\r\n        token\r\n    }\r\n}\r\n\r\nexport function removeToken() {\r\n    return {\r\n        type: userActionsType.REMOVE_TOKEN\r\n    }\r\n}","import Home from \"./Home\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, {useEffect, useState} from \"react\";\r\nimport {findAllAdvertisements} from \"../../api\";\r\nimport AdvertisementsList from \"../../components/AdvertisementsList\";\r\nimport RoundButton from \"../../components/RoundButton\";\r\n\r\nexport default function Home(props) {\r\n    const [advertisements, setAdvertisements] = useState([])\r\n    useEffect(() => {\r\n        findAllAdvertisements(props.user.token).then(data => setAdvertisements(data.content));\r\n    }, [])\r\n    return (\r\n        <>\r\n            <AdvertisementsList advertisements={advertisements} token={props.user.token}/>\r\n            {\r\n                props.user.token ? <RoundButton content={\"+\"} href={\"/advertisements/new\"}/> : null\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./advertisementView.module.scss\"\r\nimport PropTypes from \"prop-types\";\r\nimport AdvertisementsList from \"../AdvertisementsList\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {getLocal} from \"../../config/local\";\r\n\r\nconst AdvertisementView = (props) => {\r\n    const local = getLocal();\r\n    return (\r\n        <div className={`container`}>\r\n            <div className={`card ${style.advertisement}`}>\r\n                <div className={`card-content`}>\r\n                    <div className={`media-content`}>\r\n                        <p className={`title is-4`}>{props.advertisement.title}</p>\r\n                    </div>\r\n                    <div className={`content`}>\r\n                        <p>\r\n                            {props.advertisement.content.split(`\\n`).map((line, index) => {\r\n                                return (\r\n                                    <span key={index}>\r\n                                        {line}<br/>\r\n                                    </span>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"subtitle is-6\">\r\n                        {`${local.expirationDate} ${props.advertisement.expirationDate.substring(0, 10)}`}\r\n                    </p>\r\n                    <div className={`buttons`}>\r\n                        <a className={`button is-primary`} href={`mailto:hr@TestCompany.test`}>\r\n                            {\r\n                                local.apply\r\n                            }\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAdvertisementsList.propeTypes = {\r\n    advertisement: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        creationDate: PropTypes.string.isRequired,\r\n        expirationDate: PropTypes.string.isRequired,\r\n        hidden: PropTypes.bool.isRequired\r\n    }).isRequired\r\n}\r\nexport default AdvertisementView","import AdvertisementView from \"./AdvertisementView\";\r\n\r\nexport default AdvertisementView","import Advertisement from \"./Advertisement\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Advertisement);","import React, {useEffect, useState} from \"react\";\r\nimport {findAdvertisementById} from \"../../api\";\r\nimport AdvertisementView from \"../../components/AdvertismentView\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function Advertisement(props) {\r\n    const [advertisement, setAdvertisement] = useState({\r\n        id: null, title: \"\", content: \"\", creationDate: \"\", expirationDate: \"\", hidden: null\r\n    })\r\n    const {id} = useParams()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        findAdvertisementById(id, props.user.token).then(data => {\r\n            setAdvertisement(data)\r\n        }).catch(err => history.push(\"/\"));\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AdvertisementView advertisement={advertisement}/>\r\n        </>\r\n    )\r\n}","import LoginForm from \"./LoginForm\";\r\n\r\nexport default LoginForm","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    return (\r\n        <div>\r\n            <form action=\"\" className=\"box\">\r\n                <h2 className={\"title has-text-centered\"}>Login</h2>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"\" className=\"label\">Username</label>\r\n                    <div className=\"control\">\r\n                        <input onChange={(event) => setUsername(event.target.value)} value={username}\r\n                               type=\"text\" placeholder=\"e.g. johnDoo12\"\r\n                               className=\"input\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"\" className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input onChange={(event) => setPassword(event.target.value)} value={password}\r\n                               type=\"password\" placeholder=\"*********\"\r\n                               className=\"input\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field has-text-centered\">\r\n                    <button onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.onSubmit(username, password)\r\n                    }} type=\"submit\" className=\"button is-primary\">\r\n                        Login\r\n                    </button>\r\n                </div>\r\n                {props.error ? (<div className=\"notification is-danger has-text-centered\">\r\n                    {props.error}\r\n                </div>) : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nLoginForm.propTypes = {\r\n    error: PropTypes.string,\r\n    onSubmit: PropTypes.func\r\n}\r\nexport default LoginForm","import React, {useState} from \"react\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\nimport {getUserToken} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const [error, setError] = useState()\r\n    const login = (username, password) => {\r\n        getUserToken(username, password).then(result => {\r\n                props.addToken(result.token)\r\n                setError(null)\r\n                history.push(\"/\")\r\n            }\r\n        ).catch(() => setError(\"invalid username or password\"))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`container`}>\r\n            <div className={`columns is-centered`}>\r\n                <div className={`column is-5-tablet is-4-desktop is-3-widescreen`}>\r\n                    <LoginForm error={error} onSubmit={login}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login","import Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import AdvertisementEditor from \"./AdvertisementEditor\";\r\n\r\nexport default AdvertisementEditor;","import React, {useEffect, useState} from \"react\";\r\n\r\nexport default function AdvertisementEditor(props) {\r\n    const [title, setTitle] = useState(props.title)\r\n    const [content, setContent] = useState(props.content)\r\n    const [expirationDate, setExpirationDate] = useState(props.expirationDate)\r\n    const [hidden, setHidden] = useState(props.hidden)\r\n    useEffect(() => {\r\n        setTitle(props.title)\r\n        setContent(props.content)\r\n        setExpirationDate(props.expirationDate)\r\n        setHidden(props.hidden)\r\n    }, [props.id])\r\n    return (\r\n        <form>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Title</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input className=\"input\" onChange={(e) => setTitle(e.target.value)} value={title}\r\n                                   type=\"text\" placeholder=\"Title\"/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Content</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <textarea className=\"textarea\" onChange={(e) => setContent(e.target.value)} value={content}\r\n                                      placeholder=\"Your job advertisment\"></textarea>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Expiration date</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input type=\"datetime-local\"\r\n                                   className=\"input\"\r\n                                   value={expirationDate}\r\n                                   onChange={e => setExpirationDate(e.target.value)}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">Hidden</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"checkbox\"\r\n                                   onChange={e => setHidden(e.target.checked)}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <button type=\"submit\" onClick={e => {\r\n                                e.preventDefault();\r\n                                props.onSubmit(title, content, expirationDate, hidden)\r\n                            }} className=\"button is-primary\">\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport AdvertisementEditor from \"../../components/AdvertisementEditor\";\r\nimport {createAdvertisement} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst NewAdvertisement = (props) => {\r\n    const history = useHistory()\r\n    const handleSubmit = (title, content, expirationDate, hidden) => {\r\n        createAdvertisement({\r\n                title,\r\n                content,\r\n                expirationDate,\r\n                hidden\r\n            }, props.user.token\r\n        ).then(r=> history.push(`/advertisements/${r.id}`))\r\n    };\r\n    return (\r\n        <div className={`container`}>\r\n            <AdvertisementEditor onSubmit={handleSubmit} title={\"\"} content={\"\"} expirationDate={\"\"} hidden={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewAdvertisement","import {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport NewAdvertisement from \"./NewAdvertisement\"\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewAdvertisement)","import {connect} from \"react-redux\";\r\nimport {userActionsType} from \"../../store/actions/userActions\";\r\nimport EditAdvertisement from \"./EditAdvertisement\"\r\n\r\nconst mapStateToProps = state => ({user: state.user})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToken: (token) => dispatch({type: userActionsType.ADD_TOKEN, token}),\r\n        removeToken: () => dispatch({type: userActionsType.REMOVE_TOKEN}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertisement)","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {findAdvertisementById, updateAdvertisement} from \"../../api\";\r\nimport AdvertisementEditor from \"../../components/AdvertisementEditor\";\r\n\r\nexport default function EditAdvertisement(props) {\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [advertisement, setAdvertisement] = useState({\r\n        id: null, title: \"\", content: \"\", creationDate: \"\", expirationDate: \"\", hidden: null\r\n    })\r\n    useEffect(() => {\r\n        findAdvertisementById(id, props.user.token).then(data => {\r\n            setAdvertisement(data)\r\n        }).catch(err => history.push(`/advertisements/`));\r\n    }, [])\r\n    const handleSubmit = (title, content, expirationDate, hidden) => {\r\n        updateAdvertisement({\r\n            id, title, content, expirationDate, hidden\r\n        }, props.user.token).then(r=> history.push(`/advertisements/${r.id}`))\r\n    }\r\n    return (\r\n        <div className={\"container\"}>\r\n            <AdvertisementEditor id={advertisement.id}\r\n                                 title={advertisement.title}\r\n                                 content={advertisement.content}\r\n                                 expirationDate={advertisement.expirationDate}\r\n                                 hidden={advertisement.hidden}\r\n                                 onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"../../pages/Home\";\r\nimport Advertisement from \"../../pages/Advertisement\";\r\nimport Login from \"../../pages/Login\";\r\nimport NewAdvertisement from \"../../pages/NewAdvertisement\";\r\nimport EditAdvertisement from \"../../pages/EditAdvertisement\";\r\nimport {title} from \"../../config/config\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navbar title={title}/>\r\n                <Switch>\r\n                    <Route excat path={\"/advertisements/new\"}>\r\n                        <NewAdvertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/advertisements/:id/edit\"}>\r\n                        <EditAdvertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/advertisements/:id\"}>\r\n                        <Advertisement/>\r\n                    </Route>\r\n                    <Route excat path={\"/login\"}>\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route excat path={\"/\"}>\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport user from \"./userReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user\r\n});\r\n\r\nexport default rootReducer","import {userActionsType} from \"../actions/userActions\";\r\n\r\nexport default function (state = \"\", action) {\r\n    switch (action.type) {\r\n        case userActionsType.ADD_TOKEN:\r\n            return {\r\n                token: action.token\r\n            };\r\n        case userActionsType.REMOVE_TOKEN: {\r\n            return {\r\n                token: null\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./store/configureStore\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst store = configureStore();\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nexport default function configureStore(initialState) {\r\n    const composeEnhancers =\r\n        (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advertisement\":\"advertisementItem_advertisement__3uHEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundButton\":\"roundButton_roundButton__XdrwM\",\"spinAround\":\"roundButton_spinAround__W-YdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advertisement\":\"advertisementView_advertisement__3IWjw\"};"],"sourceRoot":""}